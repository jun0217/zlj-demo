<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mbg.mapper.XkjcXkMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.mbg.model.XkjcXk">
    <id column="bh" jdbcType="INTEGER" property="bh" />
    <result column="xk_bh" jdbcType="VARCHAR" property="xkBh" />
    <result column="xk_mc" jdbcType="VARCHAR" property="xkMc" />
    <result column="xk_order" jdbcType="INTEGER" property="xkOrder" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_exists" jdbcType="INTEGER" property="isExists" />
    <result column="is_esi" jdbcType="INTEGER" property="isEsi" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bh, xk_bh, xk_mc, xk_order, create_user, create_time, update_user, update_time, is_exists, 
    is_esi
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.mbg.model.XkjcXkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xkjc_xk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xkjc_xk
    where bh = #{bh,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xkjc_xk
    where bh = #{bh,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.mbg.model.XkjcXkExample">
    delete from xkjc_xk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.mbg.model.XkjcXk">
    <selectKey keyProperty="bh" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into xkjc_xk (xk_bh, xk_mc, xk_order, 
      create_user, create_time, update_user, 
      update_time, is_exists, is_esi
      )
    values (#{xkBh,jdbcType=VARCHAR}, #{xkMc,jdbcType=VARCHAR}, #{xkOrder,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isExists,jdbcType=INTEGER}, #{isEsi,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.mbg.model.XkjcXk">
    <selectKey keyProperty="bh" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into xkjc_xk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="xkBh != null">
        xk_bh,
      </if>
      <if test="xkMc != null">
        xk_mc,
      </if>
      <if test="xkOrder != null">
        xk_order,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isExists != null">
        is_exists,
      </if>
      <if test="isEsi != null">
        is_esi,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="xkBh != null">
        #{xkBh,jdbcType=VARCHAR},
      </if>
      <if test="xkMc != null">
        #{xkMc,jdbcType=VARCHAR},
      </if>
      <if test="xkOrder != null">
        #{xkOrder,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExists != null">
        #{isExists,jdbcType=INTEGER},
      </if>
      <if test="isEsi != null">
        #{isEsi,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.mbg.model.XkjcXkExample" resultType="java.lang.Integer">
    select count(*) from xkjc_xk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update xkjc_xk
    <set>
      <if test="record.bh != null">
        bh = #{record.bh,jdbcType=INTEGER},
      </if>
      <if test="record.xkBh != null">
        xk_bh = #{record.xkBh,jdbcType=VARCHAR},
      </if>
      <if test="record.xkMc != null">
        xk_mc = #{record.xkMc,jdbcType=VARCHAR},
      </if>
      <if test="record.xkOrder != null">
        xk_order = #{record.xkOrder,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isExists != null">
        is_exists = #{record.isExists,jdbcType=INTEGER},
      </if>
      <if test="record.isEsi != null">
        is_esi = #{record.isEsi,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update xkjc_xk
    set bh = #{record.bh,jdbcType=INTEGER},
      xk_bh = #{record.xkBh,jdbcType=VARCHAR},
      xk_mc = #{record.xkMc,jdbcType=VARCHAR},
      xk_order = #{record.xkOrder,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_exists = #{record.isExists,jdbcType=INTEGER},
      is_esi = #{record.isEsi,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.mbg.model.XkjcXk">
    update xkjc_xk
    <set>
      <if test="xkBh != null">
        xk_bh = #{xkBh,jdbcType=VARCHAR},
      </if>
      <if test="xkMc != null">
        xk_mc = #{xkMc,jdbcType=VARCHAR},
      </if>
      <if test="xkOrder != null">
        xk_order = #{xkOrder,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExists != null">
        is_exists = #{isExists,jdbcType=INTEGER},
      </if>
      <if test="isEsi != null">
        is_esi = #{isEsi,jdbcType=INTEGER},
      </if>
    </set>
    where bh = #{bh,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.mbg.model.XkjcXk">
    update xkjc_xk
    set xk_bh = #{xkBh,jdbcType=VARCHAR},
      xk_mc = #{xkMc,jdbcType=VARCHAR},
      xk_order = #{xkOrder,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_exists = #{isExists,jdbcType=INTEGER},
      is_esi = #{isEsi,jdbcType=INTEGER}
    where bh = #{bh,jdbcType=INTEGER}
  </update>
</mapper>